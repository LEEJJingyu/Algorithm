#include <iostream>
using namespace std;

int board[500][500];
int tetris[19][4][2] = {
	{{0, 0}, {0, 1}, {0,  2},  {0,  3}},
	{{0, 0}, {1, 0}, {2,  0},  {3,  0}},

	{{0, 0}, {1, 0}, {0,  1},  {1,  1}},

	{{0, 0}, {0, 1}, {0,  2},  {1,  1}},
	{{0, 0}, {0, 1}, {0,  2},  {-1, 1}},
	{{0, 0}, {1, 0}, {1,  1},  {2,  0}},
	{{0, 0}, {1, 0}, {1,  -1}, {2,  0}},

	{{0, 0}, {1, 0}, {1,  1},  {2,  1}},
	{{0, 0}, {1, 0}, {1,  -1}, {2,  -1}},
	{{0, 0}, {0, 1}, {-1, 1},  {-1, 2}},
	{{0, 0}, {0, 1}, {1,  1},  {1,  2}},

	{{0, 0}, {1, 0}, {1,  1},  {1,  2}},
	{{0, 0}, {0, 1}, {0,  2},  {-1, 2}},
	{{0, 0}, {1, 0}, {0,  1},  {0,  2}},
	{{0, 0}, {0, 1}, {0,  2},  {1,  2}},
	{{0, 0}, {1, 0}, {2,  0},  {2,  1}},
	{{0, 0}, {1, 0}, {2,  0},  {2,  -1}},
	{{0, 0}, {1, 0}, {2,  0},  {0,  1}},
	{{0, 0}, {1, 0}, {2,  0},  {0,  -1}}
};
int N, M;
int mx = 0;
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> N >> M;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			cin >> board[i][j];
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			for (int k = 0; k < 19; k++) {
				int sm = 0;
				bool valid = true;
				for (int l = 0; l < 4; l++) {
					int nx = i + tetris[k][l][0];
					int ny = j + tetris[k][l][1];
					if (nx < 0 || ny < 0 || nx >= N || ny >= M) {
						valid = false;
						break;
					}
					sm += board[nx][ny];
				}
				if (valid && mx < sm) {
					mx = sm;
				}
			}
		}
	}

	cout << mx;
	return 0;
}